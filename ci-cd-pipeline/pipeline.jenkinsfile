node('master'){
    stage ('CI'){
          def projectPath="MindConnectSW-3/Software_Packages"
          def projectWorkspace=env.WORKSPACE+"/"+projectPath

          try{
              def mvnHome
              stage('Checkout') {
                  git 'git@github.com:onedaywillcome1/fetchr-sample-springboot.git'
                  mvnHome = tool 'M2'
              }
              stage('Build'){
                  try{
                     sh "gradle clean build -b $projectPath/build.gradle -Pjenkins_user -Pjenkins_encrypted_password --parallel"
                     echo "Assemble passed"
                  }catch(e){
                      echo "Assemble failed in jenkins. Cause: " + e.message
                      throw e
                  }
              }
              stage('Tests'){
                  try {
                     sh "gradle test -b $projectPath/build.gradle -Pjenkins_user -Pjenkins_encrypted_password --parallel"
                     echo "Tests passed"
                  } catch (e) {
                      echo "Tests failed in jenkins. Cause: " + e.message
                      throw e
                  }
              }
              stage('Deploy'){
                  try {
                     sh "gradle test -b $projectPath/build.gradle -Pjenkins_user -Pjenkins_encrypted_password --parallel"
                     echo "Tests passed"
                  } catch (e) {
                      echo "Tests failed in jenkins. Cause: " + e.message
                      throw e
                  }
              }
              stage('Publish'){
                  try {
                     sh "gradle test -b $projectPath/build.gradle -Pjenkins_user -Pjenkins_encrypted_password --parallel"
                     echo "Tests passed"
                  } catch (e) {
                      echo "Tests failed in jenkins. Cause: " + e.message
                      throw e
                  }
              }

              }catch(e){
                  echo "Job failed"
                  notifyBuild(user_id,"FAILED")
                  throw e
             }
         }

}
